#!/bin/sh
#
# marathon 
#
# chkconfig:   2345 55 25
# description: marathon for mesos

### BEGIN INIT INFO
# Provides: marathon
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Should-Start: 
# Should-Stop: 
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Startup the Marathon framework
# Description: Mesos is a Marathon framework to manage docker
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

prog="marathon"
cmd="<%= scope.lookupvar('marathon::bin_dir') %>/${prog}"
args="--master <%= scope.lookupvar('marathon::master') %> --zk <%= scope.lookupvar('marathon::zk') %> <%= scope.lookupvar('marathon::extra_options') %>"
pidfile="/var/run/${prog}"
lockfile=/var/lock/subsys/$prog

[[ -f /etc/sysconfig/$prog ]] && . /etc/sysconfig/$prog

start() {
  echo -n $"Starting $prog: "
  daemon --pidfile=$pidfile "${cmd} ${args} >> /dev/null &"
  retval=$?
  ps -ef | grep -F "${cmd}" | grep -v 'grep' | awk '{print $2}' > ${pidfile}
  [ $retval -eq 0 ] && touch $lockfile && success
  echo
  return $retval
}

stop() {
  echo -n $"Stopping $prog: "
  killproc -p $pidfile $prog
  retval=$?
  echo
  [ $retval -eq 0 ] && rm -f $lockfile
  return $retval
}

restart() {
  stop
  start
}

case "$1" in
  start)
     $1
     ;;
  stop)
     $1
     ;;
  restart)
     $1
     ;;
  status)
     echo -n "$prog"
     status -p $pidfile
     exit $?
     ;;
  *)
     echo $"Usage: $0 {start|stop|status|restart}"
     exit 2
esac
exit 0
