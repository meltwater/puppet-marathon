# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   This function converts an array of ZooKeeper hostnames into a combined URL for
#ZooKeeper HA. Optionally you can pass custom path in ZooKeeper and default
#ZooKeeper port (applies only for servers without specified port)
#
#Usage: zk_servers_url([10.0.0.1,10.0.0.2], 'marathon', 2181)
#
#
Puppet::Functions.create_function(:'marathon::zk_servers_url') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

    # Only 1 argument should be passed
    if args.size > 3
      raise(Puppet::ParseError, 'zk_servers_url(): Wrong number of args ' + "given (#{args.size} for 1)")
    end

    zk_path = args[1] if args.size > 1
    zk_path ||= 'marathon'
    zk_port = args[2] if args.size > 2
    zk_port ||= 2181

    # The argument should be an Array
    case args[0].class.name
      when 'Array'
        zookeeper_servers = args[0].clone
      when 'String'
        # backward compatibility, will be removed in 1.x
        return args[0]
      else
        raise(Puppet::ParseError, 'zk_servers_url() accepts an Array, you passed a ' + args[0].class.name)
    end

    uri = 'zk://'
    zookeeper_servers.each_with_index do |server, i|
      uri << ',' if i > 0
      if server.index(':')
        uri << server
      else
        uri << "#{server}:#{zk_port}"
      end
    end
    return  "#{uri}/#{zk_path}"
  
  end
end
